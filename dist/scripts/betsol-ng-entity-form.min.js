/**
 * betsol-ng-entity-form - Automatic entity forms for Angular.js
 * @version v0.0.1
 * @link https://github.com/betsol/ng-entity-form
 * @license MIT
 *
 * @author Slava Fomin II <s.fomin@betsol.ru>
 */
!function(window,angular){"use strict";function scopeEntityFromEntity(formScheme,entity){var result={};return iterateFields(formScheme,function(fieldName){var value=eval("entity."+fieldName);propertyPathSet(result,fieldName,value)}),result}function getDataToSave(e,t){var n={};return iterateFields(e,function(e,r){t[e]&&!r.readonly&&(n[e]=t[e])}),n}function normalizeForm(e){return angular.forEach(e,function(t,n){e[n]=angular.extend({},defaultFieldset,t),angular.forEach(e[n].fields,function(t,r){e[n].fields[r]=angular.extend({},defaultField,t)})}),iterateFields(e,function(e,t){switch(t.type){case"string":case"url":case"boolean":case"email":case"phoneNumber":t.elementType="input";break;case"datetime":case"date":t.elementType=t.type}switch(t.type){case"string":t.inputType="text";break;case"boolean":t.inputType="checkbox";break;case"phoneNumber":t.inputType="tel";break;default:t.inputType=t.type}}),e}function iterateFields(e,t){angular.forEach(e,function(n,r){angular.forEach(e[r].fields,function(e,n){t(n,e)})})}function RedirectStrategy(e){return function(t,n){function r(){"success"==e&&alert("Данные успешно сохранены")}if(n.has("previousUrl")){var i=n.get("previousUrl");if(i.hasUrl())return i.redirectBack(),void 0}if(n.has("$state")){var a=n.get("$state");return t.redirectState?a.go(t.redirectState):(r(),a.reload()),void 0}if(n.has("router")){var o=n.get("router");return r(),o.reload(),void 0}r(),window.location.reload()}}function propertyPathSet(e,t,n){var r=t.split("."),i=e,a=0,o=r.length-1;angular.forEach(r,function(e){i[e]=i[e]||{},a==o?i[e]=n:i=i[e],a++}),i=n}var defaultFieldset={title:"",fields:{}},defaultField={title:"",type:"string",readonly:!1,required:!1};angular.module("betsol.entityForm",["ui.bootstrap.datetimepicker"]).factory("EntityForm",["$rootScope","$injector","$parse",function(e,t,n){var r=new RedirectStrategy("success"),i=new RedirectStrategy("cancel");return function(e){var a={scope:null,repository:null,entity:null,mode:null,scheme:null,successStrategy:null,cancelStrategy:null,redirectState:null};if(e=angular.extend({},a,e),!e.scope)return console.log("Missing scope");if(!e.repository)return console.log("Missing repository");var o=e.scope,c=e.entity||{},u=e.mode||"create",l=e.repository,s=normalizeForm(e.scheme||{});return"function"==typeof e.successStrategy&&(r=e.successStrategy),"function"==typeof e.cancelStrategy&&(i=e.cancelStrategy),"update"!=u||c.id?(o.processing=!1,o.mode=u,o.entity=scopeEntityFromEntity(s,c),o.formScheme=s,o.save=function(n){if(!o.processing){if(!n.$valid)return alert("Пожалуйста, заполните форму корректно");o.processing=!0;var i=getDataToSave(s,o.entity);"update"==u&&(i.id=c.id),l.save(i).then(function(){t.invoke(r,null,{config:e,$scope:o})}).catch(function(){alert("Не удалось сохранить форму, пожалуйста, проверьте вводимые данные")}).finally(function(){o.processing=!1})}},o.reset=function(){o.entity=scopeEntityFromEntity(s,c)},o.cancel=function(){t.invoke(i,null,{config:e,$scope:o})},o.entityPath=function(e){var t=n(e),r=t.assign;return function(e){return e&&r(o,e),t(o)}},void 0):console.log("Entity must have an ID in update mode")}}])}(window,angular);